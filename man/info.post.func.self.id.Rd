% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/info.post.func.self.id.R
\name{info.post.func.self.id}
\alias{info.post.func.self.id}
\title{Compile & print custom function Self-ID Information}
\usage{
info.post.func.self.id(
  ssProjID = NULL,
  ssFuncCallerID = NULL,
  siFuncMode01 = 1L,
  ssFuncType = NULL,
  csIconCarat = NULL,
  csColorCarat = NULL,
  csIconSplit = NULL,
  csColorSplit = NULL,
  csTimeStart = NULL,
  csTimeStop = NULL,
  csFormatDT = NULL,
  csColorTimeStamp = NULL,
  csColorProjID = NULL,
  csColorFuncType = NULL,
  csColorCallerID = NULL,
  csColorMain = NULL,
  sbPrintPretty = TRUE,
  ssFuncSelfID = NULL
)
}
\arguments{
\item{ssProjID}{a character (string) identifier of the R Project \if{html}{\out{<script>}}
file that called the custom R function execution.}

\item{ssFuncCallerID}{a character (string) value that identifies the parent
function that invoked that execution of the active or
current function.}

\item{siFuncMode01}{an integer (long) value that identifies the two run-time
states of this \code{Self-ID} custom function. A value of \code{1L}
sets the function mode to the \code{ENTER} (start) state; while
a value of \code{0L} sets the function mode to the \code{EXIT} (stop)
run-time state.}

\item{ssFuncType}{a character (string) value that defines the function type
of the active function being executed. This value can be
compiled with the \code{MFMRutils::code.classify.func()} function.}

\item{csIconCarat}{a character (string) value that defines the leading icon
(carat) object to be used when printing the \code{Self-ID}
information to the R Console.}

\item{csColorCarat}{a character (string) value that sets the \verb{Carat Icon} object
colour in the formatted text output.}

\item{csIconSplit}{a character (string) value that defines the middle \if{html}{\out{<split>}}
icon (object) that should be used for printing the \code{Self-ID}
information to the R Console.}

\item{csColorSplit}{a character (string) value that sets the \code{Split} information
text colour in the formatted text output.}

\item{csTimeStart}{a character (string) value that defines the \code{START-Time}
of the active function.}

\item{csTimeStop}{a character (string) value that defines the \code{STOP-Time}
of the active function.}

\item{csFormatDT}{a character (string) value that specifies how \code{DateTime} info
should be formatted when printed out to the R Console.}

\item{csColorTimeStamp}{a character (string) value that sets the \code{TimeStamp}
information text colour in the formatted text output.}

\item{csColorProjID}{a character (string) value that sets the \code{ProjID} text
colour in the formatted text output.}

\item{csColorFuncType}{a character (string) value that sets the \code{FuncType} text
colour in the formatted text output.}

\item{csColorCallerID}{a character (string) value that sets the \code{CallerID} text
colour in the formatted text output.}

\item{csColorMain}{a character (string) value that sets the \code{Main} information
text colour in the formatted text output.}

\item{sbPrintPretty}{a logical (boolean) value that defines whether the output
text (Self-ID Function Info) should be formatted when
printed to the R Console.}
}
\value{
This function returns a single \if{html}{\out{<abbreviated>}} character value that
classifies five sizes (or classes) of custom R functions: ...
* "TNY" -> a "Tiny" R Function (less than 50 lines of code);
}
\description{
A \if{html}{\out{<tiny>}} Helper Function that compiles and prints the self-identification
information (i.e. self-id, type, caller, run-time duration etc.) of a custom
R function. This custom function was intended to mainly support the MFMR Suite
of R Functions, but can be utilized as a standalone function in other R packages.
}
\examples{
### Classify your Custom R Function as follows:
require(MFMRutils)   # -> Ensures the "MFMRutils" library is installed & loaded

info.post.func.self.id()   # -> Set this Code Editor Line Number `CELN`as the 
                           #    `siFuncStopCELN` arg value !!!

}
