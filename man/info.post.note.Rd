% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/info.post.note.R
\name{info.post.note}
\alias{info.post.note}
\title{Post interactive (real-time) Project Notifications}
\usage{
info.post.note(
  ssNote = "NOTE to POST !!!",
  ssHeader = NULL,
  csIconCarat = "=>",
  csIconSplit = "|",
  sbShowTail = TRUE,
  sbPrePendNL = FALSE,
  sbPrintPretty = TRUE,
  sbPostPendNL = TRUE,
  sbPostPend2ndNL = FALSE,
  csIconTail = MFMRutils::MFMRIcons$FireFlame,
  csColorNote = MFMRutils::MFMRColors$CyanFORE,
  csColorHeader = MFMRutils::MFMRColors$GreenFORE,
  csColorCarat = MFMRutils::MFMRColors$YellowFORE,
  csColorSplit = MFMRutils::MFMRColors$YellowFORE,
  ...
)
}
\arguments{
\item{ssNote}{the character vector (i.e. text string or note) to be printed
to the console. This text note is also returned as a function
output under the "value" option of this function's results list.}

\item{ssHeader}{a character vector (string or text) that defines the starting
text of the output message (notification). This function
argument is useful in standardizing the notification format
for an entire R Project.}

\item{csIconCarat}{a character vector (text string or object) that defines
the leading symbol (icon) of the printed notification.}

\item{csIconSplit}{a character vector (text string or object) that defines
the middle of the output message (i.e. separator between
the "ssHeader" and the "ssNote" parts of the note).}

\item{sbShowTail}{a logical (boolean) value that specifies whether to show or
print the trailing (terminal or "tail") icon object or not.}

\item{sbPrePendNL}{a logical (boolean) value that specifies whether a new
line (blank space or row) should be added to the START of
a posted note.}

\item{sbPrintPretty}{a logical (boolean) argument that specifies whether the
ANSI text font formatting (i.e. colour & weight) should
be applied to the printed notification or not.}

\item{sbPostPendNL}{a logical (boolean) value that specifies whether a new
line (blank space or row) should be added to the END of
a posted note.}

\item{sbPostPend2ndNL}{a logical (boolean) value that specifies whether a
second line (blank space or row) should be added to
the END of a posted note. This function argument can
be useful for clearly delineating sections within a
custom R Function or R Project output (printed) code.}

\item{csIconTail}{a compound character vector (text string or object) value
that defines the image (icon) to be used for the trailing
(terminal or "tail") icon object of the posted note.}

\item{csColorNote}{a character (text string) value that defines the text color
for the note (main text) object of the posted note.}

\item{csColorHeader}{a character (text string) value that defines the text
color for the header object of the posted note.}

\item{csColorCarat}{a character (text string) value that defines the object
color for the leading (starting) symbol (icon) object of
the posted (output) notification (note).}

\item{csColorSplit}{a character (text string) value that defines the text color
for the middle separator (icon) object of the posted note.}

\item{...}{all "fall-through" function arguments to be used as inputs to any
nested functions. In this specific case these "fall-through" args
are related to the "MFMRutils::info.post.func.self.id()" function
(e.g. "ssProjID", "csFormatDT", "csIconSplit", "csIconCarat",
"sbRunSelfID", "csColorMain", "csColorSplit", "csColorCarat",
"csColorProjID", "ssFuncCallerID", "csColorCallerID",
"csColorFuncType", "csColorTimeStamp") <- list is NOT exhaustive !!!}
}
\value{
\itemize{
\item This function prints the specified text (notification) directly to the
console even if the function outputs are assigned to a variable.
\item This function also outputs additional function information (i.e. internally
computed function information) as a list object.
}
}
\description{
A Helper Function that standardizes the User / Project Information Posting
(i.e. notification) Processes. This custom function was intended to mainly
support the MFMR Suite of R Functions, but can be utilized as a standalone
function in other (i.e. 3rd Party) R packages.
}
\examples{

### Print a dummy notification ...
info.post.note()              # -> when "MFMRutils" library is installed & loaded !!!
MFMRutils::info.post.note()   # -> when "MFMRutils" library is installed, but NOT loaded !!!


### Use "fall-through" function arguments to activate additional outputs ...
info.post.note(sbRunSelfID = TRUE)   # -> Prints the custom R function's START (ENTRY) and
                                     #    STOP (EXIT) "Self-Identifier" information ...
info.post.note(                                  
  sbRunSelfID = TRUE, 
  ssFuncCallerID = "testR"           # -> Sets the Calling Function Identifier (tag) in the
)                                    #    "Self-ID" info to a value of `testR` ...

info.post.note(                                  
  sbRunSelfID = TRUE, 
  ssProjID = "MFMR-R-Suite"          # -> Sets the R Project Identifier (tag) in the "Self-ID"
)                                    #    info to a value of `MFMR-R-Suite` ...


~ ### Print additional (function internal) information ... ~
~ info.post.note(sbRetFuncInfo = TRUE) ~   # -> Outputs additional function information in list form ...

}
